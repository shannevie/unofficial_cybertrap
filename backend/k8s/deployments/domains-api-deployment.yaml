apiVersion: apps/v1
kind: Deployment
metadata:
  name: domains-api
  labels:
    app: domains-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: domains-api
  template:
    metadata:
      labels:
        app: domains-api
    spec:
      containers:
      - name: domains-api
        image: 897729130899.dkr.ecr.ap-southeast-1.amazonaws.com/cybertrap-backend:domains-api-v0.1.0
        command: ["/bin/domains_api"]
        ports:
        - containerPort: 5000
        env:
        - name: SERVE_ADDRESS
          value: "0.0.0.0:5000"

        - name: MONGO_DB_URI
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: uri
        - name: MONGO_DB_NAME
          value: cybertrap

        - name: RABBIT_MQ_URI
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: uri

        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-secret
              key: access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-secret
              key: secret-access-key

        - name: SCAN_RESULTS_BUCKET_NAME
          value: cybertrap-scan-results
        - name: TEMPLATES_BUCKET_NAME
          value: cybertrap-templates-bucket
---
apiVersion: v1
kind: Service
metadata:
  name: domains-api-service
spec:
  selector:
    app: domains-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
  type: LoadBalancer